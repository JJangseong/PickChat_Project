{"ast":null,"code":"var _jsxFileName = \"/Users/jangseongjin/Documents/WorkSpse/tempoject/react-material-dashboard-master/src/layouts/Main/components/Topbar/index.jsx\";\nimport React, { Component, Fragment } from 'react';\nimport { withRouter } from 'react-router-dom'; // Externals\n\nimport classNames from 'classnames';\nimport compose from 'recompose/compose';\nimport PropTypes from 'prop-types'; // Material helpers\n\nimport { withStyles, Button } from '@material-ui/core'; // Material components\n\nimport { IconButton, Popover, Toolbar, Typography } from '@material-ui/core'; // Material icons\n\nimport { Input as InputIcon } from '@material-ui/icons'; // Shared services\n\nimport { getNotifications } from 'services/notification'; // Custom components\n\nimport { NotificationList } from './components'; // Component styles\n\nimport styles from './styles';\n\nclass Topbar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.signal = true;\n    this.state = {\n      notifications: [],\n      notificationsLimit: 4,\n      notificationsCount: 0,\n      notificationsEl: null\n    };\n\n    this.handleSignOut = () => {\n      const history = this.props.history;\n      localStorage.setItem('isAuthenticated', false);\n      history.push('/login');\n    };\n\n    this.handlePick = () => {\n      const history = this.props.history;\n      localStorage.setItem('isAuthenticated', false);\n      history.push('/pick');\n    };\n\n    this.handleMain = () => {\n      const history = this.props.history;\n      localStorage.setItem('isAuthenticated', false);\n      history.push('/');\n    };\n\n    this.handleCs = () => {\n      const history = this.props.history;\n      localStorage.setItem('isAuthenticated', false);\n      history.push('/cs');\n    };\n\n    this.handleShowNotifications = event => {\n      this.setState({\n        notificationsEl: event.currentTarget\n      });\n    };\n\n    this.handleCloseNotifications = () => {\n      this.setState({\n        notificationsEl: null\n      });\n    };\n  }\n\n  async getNotifications() {\n    try {\n      const notificationsLimit = this.state.notificationsLimit;\n\n      const _ref = await getNotifications(notificationsLimit),\n            notifications = _ref.notifications,\n            notificationsCount = _ref.notificationsCount;\n\n      if (this.signal) {\n        this.setState({\n          notifications,\n          notificationsCount\n        });\n      }\n    } catch (error) {\n      return;\n    }\n  }\n\n  componentDidMount() {\n    this.signal = true;\n    this.getNotifications();\n  }\n\n  componentWillUnmount() {\n    this.signal = false;\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          className = _this$props.className,\n          title = _this$props.title;\n    const _this$state = this.state,\n          notifications = _this$state.notifications,\n          notificationsEl = _this$state.notificationsEl;\n    const rootClassName = classNames(classes.root, className);\n    const showNotifications = Boolean(notificationsEl);\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: rootClassName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      className: classes.toolbar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.title,\n      variant: \"h4\",\n      onClick: this.handleMain,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, title, \" title\")), React.createElement(IconButton, {\n      className: classes.notificationsButton,\n      onClick: this.handlePick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"\\uD53D\\uC2A4\\uD0C0\")), React.createElement(IconButton, {\n      className: classes.signOutButton,\n      onClick: this.handleCs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"\\uACE0\\uAC1D\\uC13C\\uD130\")), React.createElement(IconButton, {\n      className: classes.signOutButton,\n      onClick: this.handleSignOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(InputIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })))), React.createElement(Popover, {\n      anchorEl: notificationsEl,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      onClose: this.handleCloseNotifications,\n      open: showNotifications,\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(NotificationList, {\n      notifications: notifications,\n      onSelect: this.handleCloseNotifications,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    })));\n  }\n\n}\n\nTopbar.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  isSidebarOpen: PropTypes.bool,\n  onToggleSidebar: PropTypes.func,\n  title: PropTypes.string\n};\nTopbar.defaultProps = {\n  onToggleSidebar: () => {}\n};\nexport default compose(withRouter, withStyles(styles))(Topbar);","map":{"version":3,"sources":["/Users/jangseongjin/Documents/WorkSpse/tempoject/react-material-dashboard-master/src/layouts/Main/components/Topbar/index.jsx"],"names":["React","Component","Fragment","withRouter","classNames","compose","PropTypes","withStyles","Button","IconButton","Popover","Toolbar","Typography","Input","InputIcon","getNotifications","NotificationList","styles","Topbar","signal","state","notifications","notificationsLimit","notificationsCount","notificationsEl","handleSignOut","history","props","localStorage","setItem","push","handlePick","handleMain","handleCs","handleShowNotifications","event","setState","currentTarget","handleCloseNotifications","error","componentDidMount","componentWillUnmount","render","classes","className","title","rootClassName","root","showNotifications","Boolean","toolbar","notificationsButton","signOutButton","vertical","horizontal","propTypes","string","object","isRequired","isSidebarOpen","bool","onToggleSidebar","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\n\n// Externals\nimport classNames from 'classnames';\nimport compose from 'recompose/compose';\nimport PropTypes from 'prop-types';\n\n// Material helpers\nimport { withStyles, Button } from '@material-ui/core';\n\n// Material components\nimport { IconButton, Popover, Toolbar, Typography } from '@material-ui/core';\n\n// Material icons\nimport { Input as InputIcon } from '@material-ui/icons';\n\n// Shared services\nimport { getNotifications } from 'services/notification';\n\n// Custom components\nimport { NotificationList } from './components';\n\n// Component styles\nimport styles from './styles';\n\nclass Topbar extends Component {\n  signal = true;\n\n  state = {\n    notifications: [],\n    notificationsLimit: 4,\n    notificationsCount: 0,\n    notificationsEl: null\n  };\n\n  async getNotifications() {\n    try {\n      const { notificationsLimit } = this.state;\n\n      const { notifications, notificationsCount } = await getNotifications(\n        notificationsLimit\n      );\n\n      if (this.signal) {\n        this.setState({\n          notifications,\n          notificationsCount\n        });\n      }\n    } catch (error) {\n      return;\n    }\n  }\n\n  componentDidMount() {\n    this.signal = true;\n    this.getNotifications();\n  }\n\n  componentWillUnmount() {\n    this.signal = false;\n  }\n\n  handleSignOut = () => {\n    const { history } = this.props;\n\n    localStorage.setItem('isAuthenticated', false);\n    history.push('/login');\n  };\n\n  handlePick = () => {\n    const { history } = this.props;\n\n    localStorage.setItem('isAuthenticated', false);\n    history.push('/pick');\n  };\n\n  handleMain = () => {\n    const { history } = this.props;\n\n    localStorage.setItem('isAuthenticated', false);\n    history.push('/');\n  };\n\n  handleCs = () => {\n    const { history } = this.props;\n\n    localStorage.setItem('isAuthenticated', false);\n    history.push('/cs');\n  };\n\n  handleShowNotifications = event => {\n    this.setState({\n      notificationsEl: event.currentTarget\n    });\n  };\n\n  handleCloseNotifications = () => {\n    this.setState({\n      notificationsEl: null\n    });\n  };\n\n  render() {\n    const { classes, className, title } = this.props;\n    const { notifications, notificationsEl } = this.state;\n\n    const rootClassName = classNames(classes.root, className);\n    const showNotifications = Boolean(notificationsEl);\n\n    return (\n      <Fragment>\n        <div className={rootClassName}>\n          <Toolbar className={classes.toolbar}>\n            <Typography\n              className={classes.title}\n              variant=\"h4\"\n              onClick={this.handleMain}>\n              <Button>{title} title</Button>\n            </Typography>\n            <IconButton\n              className={classes.notificationsButton}\n              onClick={this.handlePick}>\n              <Button>픽스타</Button>\n            </IconButton>\n            <IconButton\n              className={classes.signOutButton}\n              onClick={this.handleCs}>\n              <Button>고객센터</Button>\n            </IconButton>\n            <IconButton\n              className={classes.signOutButton}\n              onClick={this.handleSignOut}>\n              <InputIcon />\n            </IconButton>\n          </Toolbar>\n        </div>\n        <Popover\n          anchorEl={notificationsEl}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center'\n          }}\n          onClose={this.handleCloseNotifications}\n          open={showNotifications}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center'\n          }}>\n          <NotificationList\n            notifications={notifications}\n            onSelect={this.handleCloseNotifications}\n          />\n        </Popover>\n      </Fragment>\n    );\n  }\n}\n\nTopbar.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  isSidebarOpen: PropTypes.bool,\n  onToggleSidebar: PropTypes.func,\n  title: PropTypes.string\n};\n\nTopbar.defaultProps = {\n  onToggleSidebar: () => {}\n};\n\nexport default compose(\n  withRouter,\n  withStyles(styles)\n)(Topbar);\n"]},"metadata":{},"sourceType":"module"}