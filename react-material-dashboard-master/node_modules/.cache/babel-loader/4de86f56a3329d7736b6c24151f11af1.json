{"ast":null,"code":"var _jsxFileName = \"/Users/jangseongjin/Documents/WorkSpse/tempoject/react-material-dashboard-master/src/layouts/Main/index.jsx\";\nimport React, { Component, Fragment } from 'react'; // Externals\n\nimport classNames from 'classnames';\nimport compose from 'recompose/compose';\nimport PropTypes from 'prop-types'; // Material helpers\n\nimport { withStyles, withWidth } from '@material-ui/core'; // Material components\n\nimport { Drawer } from '@material-ui/core'; // Custom components\n\nimport { Topbar, Footer } from './components'; // Component styles\n\nimport styles from './styles';\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClose = () => {\n      this.setState({\n        isOpen: false\n      });\n    };\n\n    this.handleToggleOpen = () => {\n      this.setState(prevState => ({\n        isOpen: !prevState.isOpen\n      }));\n    };\n\n    const isMobile = ['xs', 'sm', 'md'].includes(props.width);\n    this.state = {\n      isOpen: isMobile\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          width = _this$props.width,\n          title = _this$props.title,\n          children = _this$props.children;\n    const isOpen = this.state.isOpen;\n    const isMobile = ['xs', 'sm', 'md'].includes(width);\n    const shiftTopbar = isOpen && !isMobile;\n    const shiftContent = isOpen && !isMobile;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Topbar, {\n      className: classNames(classes.topbar, {\n        [classes.topbarShift]: shiftTopbar\n      }),\n      isSidebarOpen: isOpen,\n      onToggleSidebar: this.handleToggleOpen,\n      title: title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(Drawer, {\n      anchor: \"left\",\n      classes: {\n        paper: classes.drawerPaper\n      },\n      onClose: this.handleClose,\n      open: isOpen,\n      variant: isMobile ? 'temporary' : 'persistent',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"main\", {\n      className: classNames(classes.content, {\n        [classes.contentShift]: shiftContent\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, children, React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })));\n  }\n\n}\n\nDashboard.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n  title: PropTypes.string,\n  width: PropTypes.string.isRequired\n};\nexport default compose(withStyles(styles), withWidth())(Dashboard);","map":{"version":3,"sources":["/Users/jangseongjin/Documents/WorkSpse/tempoject/react-material-dashboard-master/src/layouts/Main/index.jsx"],"names":["React","Component","Fragment","classNames","compose","PropTypes","withStyles","withWidth","Drawer","Topbar","Footer","styles","Dashboard","constructor","props","handleClose","setState","isOpen","handleToggleOpen","prevState","isMobile","includes","width","state","render","classes","title","children","shiftTopbar","shiftContent","topbar","topbarShift","paper","drawerPaper","content","contentShift","propTypes","node","className","string","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\n\n// Externals\nimport classNames from 'classnames';\nimport compose from 'recompose/compose';\nimport PropTypes from 'prop-types';\n\n// Material helpers\nimport { withStyles, withWidth } from '@material-ui/core';\n\n// Material components\nimport { Drawer } from '@material-ui/core';\n\n// Custom components\nimport { Topbar, Footer } from './components';\n\n// Component styles\nimport styles from './styles';\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    const isMobile = ['xs', 'sm', 'md'].includes(props.width);\n\n    this.state = {\n      isOpen: isMobile\n    };\n  }\n\n  handleClose = () => {\n    this.setState({ isOpen: false });\n  };\n\n  handleToggleOpen = () => {\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen\n    }));\n  };\n\n  render() {\n    const { classes, width, title, children } = this.props;\n    const { isOpen } = this.state;\n\n    const isMobile = ['xs', 'sm', 'md'].includes(width);\n    const shiftTopbar = isOpen && !isMobile;\n    const shiftContent = isOpen && !isMobile;\n\n    return (\n      <Fragment>\n        <Topbar\n          className={classNames(classes.topbar, {\n            [classes.topbarShift]: shiftTopbar\n          })}\n          isSidebarOpen={isOpen}\n          onToggleSidebar={this.handleToggleOpen}\n          title={title}\n        />\n        <Drawer\n          anchor=\"left\"\n          classes={{ paper: classes.drawerPaper }}\n          onClose={this.handleClose}\n          open={isOpen}\n          variant={isMobile ? 'temporary' : 'persistent'}\n        />\n        <main\n          className={classNames(classes.content, {\n            [classes.contentShift]: shiftContent\n          })}>\n          {children}\n          <Footer />\n        </main>\n      </Fragment>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n  title: PropTypes.string,\n  width: PropTypes.string.isRequired\n};\n\nexport default compose(\n  withStyles(styles),\n  withWidth()\n)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}