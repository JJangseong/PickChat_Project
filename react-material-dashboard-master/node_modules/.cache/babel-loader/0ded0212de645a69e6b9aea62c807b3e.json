{"ast":null,"code":"var _jsxFileName = \"/Users/jangseongjin/Documents/WorkSpse/tempoject/react-material-dashboard-master/src/views/UserList/components/UsersTable/index.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom'; // Externals\n\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar'; // Material helpers\n\nimport { withStyles } from '@material-ui/core'; // Material components\n\nimport { Avatar, Checkbox, Table, TableBody, TableCell, TableHead, TableRow, Typography, TablePagination } from '@material-ui/core'; // Shared helpers\n\nimport { getInitials } from 'helpers'; // Shared components\n\nimport { Portlet, PortletContent } from 'components'; // Component styles\n\nimport styles from './styles';\n\nclass UsersTable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedUsers: [],\n      rowsPerPage: 10,\n      page: 0\n    };\n\n    this.handleSelectAll = event => {\n      const _this$props = this.props,\n            users = _this$props.users,\n            onSelect = _this$props.onSelect;\n      let selectedUsers;\n\n      if (event.target.checked) {\n        selectedUsers = users.map(user => user.userid);\n      } else {\n        selectedUsers = [];\n      }\n\n      this.setState({\n        selectedUsers\n      });\n      onSelect(selectedUsers);\n    };\n\n    this.handleSelectOne = (event, id) => {\n      const onSelect = this.props.onSelect;\n      const selectedUsers = this.state.selectedUsers;\n      const selectedIndex = selectedUsers.indexOf(id);\n      let newSelectedUsers = [];\n\n      if (selectedIndex === -1) {\n        newSelectedUsers = newSelectedUsers.concat(selectedUsers, id);\n      } else if (selectedIndex === 0) {\n        newSelectedUsers = newSelectedUsers.concat(selectedUsers.slice(1));\n      } else if (selectedIndex === selectedUsers.length - 1) {\n        newSelectedUsers = newSelectedUsers.concat(selectedUsers.slice(0, -1));\n      } else if (selectedIndex > 0) {\n        newSelectedUsers = newSelectedUsers.concat(selectedUsers.slice(0, selectedIndex), selectedUsers.slice(selectedIndex + 1));\n      }\n\n      this.setState({\n        selectedUsers: newSelectedUsers\n      });\n      onSelect(newSelectedUsers);\n    };\n\n    this.handleChangePage = (event, page) => {\n      this.setState({\n        page\n      });\n    };\n\n    this.handleChangeRowsPerPage = event => {\n      this.setState({\n        rowsPerPage: event.target.value\n      });\n    };\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          classes = _this$props2.classes,\n          className = _this$props2.className,\n          users = _this$props2.users;\n    const _this$state = this.state,\n          activeTab = _this$state.activeTab,\n          selectedUsers = _this$state.selectedUsers,\n          rowsPerPage = _this$state.rowsPerPage,\n          page = _this$state.page;\n    const rootClassName = classNames(classes.root, className);\n    return React.createElement(Portlet, {\n      className: rootClassName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(PortletContent, {\n      noPadding: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(PerfectScrollbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      checked: selectedUsers.length === users.length,\n      color: \"primary\",\n      indeterminate: selectedUsers.length > 0 && selectedUsers.length < users.length,\n      onChange: this.handleSelectAll,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), \"\\uC774\\uB984\"), React.createElement(TableCell, {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"\\uC544\\uC774\\uB514\"), React.createElement(TableCell, {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"\\uC131\\uBCC4\"), React.createElement(TableCell, {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"\\uB098\\uC774\"), React.createElement(TableCell, {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"\\uB4F1\\uB85D\\uC77C\"))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, users.filter(user => {\n      if (activeTab === 1) {\n        return !user.returning;\n      }\n\n      if (activeTab === 2) {\n        return user.returning;\n      }\n\n      return user;\n    }).slice(0, rowsPerPage).map(user => React.createElement(TableRow, {\n      className: classes.tableRow,\n      hover: true,\n      key: user.id,\n      selected: selectedUsers.indexOf(user.id) !== -1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      className: classes.tableCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.tableCellInner,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      checked: selectedUsers.indexOf(user.id) !== -1,\n      color: \"primary\",\n      onChange: event => this.handleSelectOne(event, user.id),\n      value: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(Avatar, {\n      className: classes.avatar,\n      src: user.avatarUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, getInitials(user.name)), React.createElement(Link, {\n      to: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.nameText,\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, user.name)))), React.createElement(TableCell, {\n      className: classes.tableCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, user.id), React.createElement(TableCell, {\n      className: classes.tableCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, user.address.state), React.createElement(TableCell, {\n      className: classes.tableCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, user.phone), React.createElement(TableCell, {\n      className: classes.tableCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, moment(user.createdAt).format('DD/MM/YYYY'))))))), React.createElement(TablePagination, {\n      backIconButtonProps: {\n        'aria-label': 'Previous Page'\n      },\n      component: \"div\",\n      count: users.length,\n      nextIconButtonProps: {\n        'aria-label': 'Next Page'\n      },\n      onChangePage: this.handleChangePage,\n      onChangeRowsPerPage: this.handleChangeRowsPerPage,\n      page: page,\n      rowsPerPage: rowsPerPage,\n      rowsPerPageOptions: [5, 10, 25],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    })));\n  }\n\n}\n\nUsersTable.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n  onSelect: PropTypes.func,\n  onShowDetails: PropTypes.func,\n  users: PropTypes.array.isRequired\n};\nUsersTable.defaultProps = {\n  users: [],\n  onSelect: () => {},\n  onShowDetails: () => {}\n};\nexport default withStyles(styles)(UsersTable);","map":{"version":3,"sources":["/Users/jangseongjin/Documents/WorkSpse/tempoject/react-material-dashboard-master/src/views/UserList/components/UsersTable/index.jsx"],"names":["React","Component","Link","classNames","PropTypes","moment","PerfectScrollbar","withStyles","Avatar","Checkbox","Table","TableBody","TableCell","TableHead","TableRow","Typography","TablePagination","getInitials","Portlet","PortletContent","styles","UsersTable","state","selectedUsers","rowsPerPage","page","handleSelectAll","event","props","users","onSelect","target","checked","map","user","userid","setState","handleSelectOne","id","selectedIndex","indexOf","newSelectedUsers","concat","slice","length","handleChangePage","handleChangeRowsPerPage","value","render","classes","className","activeTab","rootClassName","root","filter","returning","tableRow","tableCell","tableCellInner","avatar","avatarUrl","name","nameText","address","phone","createdAt","format","propTypes","string","object","isRequired","func","onShowDetails","array","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\n// Externals\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n\n// Material helpers\nimport { withStyles } from '@material-ui/core';\n\n// Material components\nimport {\n  Avatar,\n  Checkbox,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n  TablePagination\n} from '@material-ui/core';\n\n// Shared helpers\nimport { getInitials } from 'helpers';\n\n// Shared components\nimport { Portlet, PortletContent } from 'components';\n\n// Component styles\nimport styles from './styles';\n\nclass UsersTable extends Component {\n  state = {\n    selectedUsers: [],\n    rowsPerPage: 10,\n    page: 0\n  };\n  handleSelectAll = event => {\n    const { users, onSelect } = this.props;\n\n    let selectedUsers;\n\n    if (event.target.checked) {\n      selectedUsers = users.map(user => user.userid);\n    } else {\n      selectedUsers = [];\n    }\n\n    this.setState({ selectedUsers });\n\n    onSelect(selectedUsers);\n  };\n\n  handleSelectOne = (event, id) => {\n    const { onSelect } = this.props;\n    const { selectedUsers } = this.state;\n\n    const selectedIndex = selectedUsers.indexOf(id);\n    let newSelectedUsers = [];\n\n    if (selectedIndex === -1) {\n      newSelectedUsers = newSelectedUsers.concat(selectedUsers, id);\n    } else if (selectedIndex === 0) {\n      newSelectedUsers = newSelectedUsers.concat(selectedUsers.slice(1));\n    } else if (selectedIndex === selectedUsers.length - 1) {\n      newSelectedUsers = newSelectedUsers.concat(selectedUsers.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedUsers = newSelectedUsers.concat(\n        selectedUsers.slice(0, selectedIndex),\n        selectedUsers.slice(selectedIndex + 1)\n      );\n    }\n\n    this.setState({ selectedUsers: newSelectedUsers });\n\n    onSelect(newSelectedUsers);\n  };\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  render() {\n    const { classes, className, users } = this.props;\n    const { activeTab, selectedUsers, rowsPerPage, page } = this.state;\n\n    const rootClassName = classNames(classes.root, className);\n    return (\n      <Portlet className={rootClassName}>\n        <PortletContent noPadding>\n          <PerfectScrollbar>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell align=\"left\">\n                    <Checkbox\n                      checked={selectedUsers.length === users.length}\n                      color=\"primary\"\n                      indeterminate={\n                        selectedUsers.length > 0 &&\n                        selectedUsers.length < users.length\n                      }\n                      onChange={this.handleSelectAll}\n                    />\n                    이름\n                  </TableCell>\n                  <TableCell align=\"left\">아이디</TableCell>\n                  <TableCell align=\"left\">성별</TableCell>\n                  <TableCell align=\"left\">나이</TableCell>\n                  <TableCell align=\"left\">등록일</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {users\n                  .filter(user => {\n                    if (activeTab === 1) {\n                      return !user.returning;\n                    }\n\n                    if (activeTab === 2) {\n                      return user.returning;\n                    }\n\n                    return user;\n                  })\n                  .slice(0, rowsPerPage)\n                  .map(user => (\n                    <TableRow\n                      className={classes.tableRow}\n                      hover\n                      key={user.id}\n                      selected={selectedUsers.indexOf(user.id) !== -1}>\n                      <TableCell className={classes.tableCell}>\n                        <div className={classes.tableCellInner}>\n                          <Checkbox\n                            checked={selectedUsers.indexOf(user.id) !== -1}\n                            color=\"primary\"\n                            onChange={event =>\n                              this.handleSelectOne(event, user.id)\n                            }\n                            value=\"true\"\n                          />\n                          <Avatar\n                            className={classes.avatar}\n                            src={user.avatarUrl}>\n                            {getInitials(user.name)}\n                          </Avatar>\n                          <Link to=\"#\">\n                            <Typography\n                              className={classes.nameText}\n                              variant=\"body1\">\n                              {user.name}\n                            </Typography>\n                          </Link>\n                        </div>\n                      </TableCell>\n                      <TableCell className={classes.tableCell}>\n                        {user.id}\n                      </TableCell>\n                      <TableCell className={classes.tableCell}>\n                        {user.address.state}\n                      </TableCell>\n                      <TableCell className={classes.tableCell}>\n                        {user.phone}\n                      </TableCell>\n                      <TableCell className={classes.tableCell}>\n                        {moment(user.createdAt).format('DD/MM/YYYY')}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n              </TableBody>\n            </Table>\n          </PerfectScrollbar>\n          <TablePagination\n            backIconButtonProps={{\n              'aria-label': 'Previous Page'\n            }}\n            component=\"div\"\n            count={users.length}\n            nextIconButtonProps={{\n              'aria-label': 'Next Page'\n            }}\n            onChangePage={this.handleChangePage}\n            onChangeRowsPerPage={this.handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </PortletContent>\n      </Portlet>\n    );\n  }\n}\n\nUsersTable.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n  onSelect: PropTypes.func,\n  onShowDetails: PropTypes.func,\n  users: PropTypes.array.isRequired\n};\n\nUsersTable.defaultProps = {\n  users: [],\n  onSelect: () => {},\n  onShowDetails: () => {}\n};\n\nexport default withStyles(styles)(UsersTable);\n"]},"metadata":{},"sourceType":"module"}